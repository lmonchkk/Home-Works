.box{
    width: 300px;
    height: 100px;
    background: red;
    /* Переходы */

    transition-property: width; /* То, что меняетя */
    transition-duration: 3s; /* Время выполнения*/

    transition-timing-function: cubic-bezier(0,1.16,.45,.27); /*cubic-bezier.com*/

    transition-delay: 0.5s; 

    /*
        transition-property - принимает название свойства на которое влияет переход
        По умолчанию - all (все свойства)
        none - отключает все свойства
        имя_свойства - будет работать только для него

        transition-duration - время выполнения перехода
        Задаётся в s \ ms

        transition-timing-function - принимает функцию, которая отвечает за параметры ускорения перехода
        По-умолчанию - ease
        можно передать любую функцию cubic-besier

        transition-delay - задержка перед выполнением перехода
        Задаётся в s \ ms

        Краткая запись перехода:
        transition: property duration timing-function delay;

        Переход сразу для нескольких параметров
    1)    transition: background 1s ease, color 4s linear;
    2)    transition-property: background, color;
        transition-delay: 1s, 4s;
        transition-timing-function: ease, linear;
    */
}

.box:hover{
    width: 600px;
}


/* Трансформации (transform) */

.box2{
    width: 200px;
    height: 200px;
    background: blue;
}

.box2:hover{
    /* Сдвиг элемента */
    transform: translate(50px, 60px); /*Сдвиг объекта по осям*/
    /*
        translateX(50px) - для сдвига по оси X
        translateY(60px) - для сдвига по оси Y
    */

    /* Искажение */
    transform: skew(20deg, 0);
    /*
        Искажает оси объекта
    */
}

.box3{
    width: 100px;
    height: 100px;
    background: purple;

}

.box3:hover{
    /* Масштабирование */
    transform: scale(-1, -1); /* Процент увеличения отностельно 1 (1=100%) */

    /*
        Принимает значения от 0 до 1 (уменьшение)
        Больше 1 - (увеличение)
        Отрицательное значение - объект зеркально перевернётся

        skaleX(1)
        scaleY(1)
    */
}

.box4{
    width: 100px;
    height: 100px;
    background: green;
    transition: transform 2s;
    transform-origin: 70% 30%; /* Меняет координаты оси. Принимает px \ % \ top, left, right, bottom*/
}

.box4:hover{
    /* Поворот */
    transform: rotate(360deg); /*Принимает градусы поворота - deg*/
}

.box5{
    font-size: 60px;
    font-weight: bold;
    animation: shadow 2s infinite ease-in-out;
    position: absolute;

    animation: shadow 8s infinite ease-in-out;
}

.box5:hover{
    animation-play-state: paused;
}

@keyframes shadow{          /* shadow - произвольное название */
    0% {
        text-shadow: 0 0 3px black;
        left: 0;
    }


    50%{
        text-shadow: 0 0 30px black;
        left: 300px;
        transform: rotate(360deg)
    }

    100%{
        text-shadow: 0 0 3px black;
        left: 0px;
    }
    /* Каждый кадр анимации задаётся по процентам */
}

@keyframes trash{
    0%{
        left: 0;
    }

    37.5%{
        left: 400px;
    }

    62.5%{
        top: 0px;
        left: 400px;
    }

    87.5%{
        top: 200px;
        transform: rotate(360deg);
    }

    100%{
        transform: scale(2,2);
        left: 400px;
        top: 200px;
    }
}

/*
Задокументированные названия начала и конца анимации
from - начало (0%)
to - конец (100%)


animation-name: произвольное_имя; - принимает произвольное имя
none - отключает анимацию


animation-duration - время выполнения анимации в секундах или милисекундах


animation-timing-function - принимает функцию cubic-bezier


animation-iteration-count - количество итераций(кол-во повторений) анимаций
Если задать infinite то анимация будет бесконечной


animation-direction - направление анимации
normal - по умолчанию
reverse - все повторы анимации воспроизводяться в обратном направлении
alternate - каждый нечётый повтор воспроизводиться в нормальном направлении, а каждый чётный в обратном
alternate-reverse - то же самое что и alretnate только наоборот


animation-play-state - определяет будет ли анимация остановлена или запущена
По умолчанию значение running   pauseed - остановка анимации


animation-delay - задержка перед началом анимации в s \ ms


Краткия запись анимации:
animation: name duration timing-function delay iteration-count direction;

Множественная онимация

Анимации можно передавать через запятую и они будут воспроизводиться одновременно.

*/